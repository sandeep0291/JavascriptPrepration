// ******************************** Company NAGARRO ********************************
// ********************************                 ********************************

JavaScript Question

Q1. What is difference b/w let,const,var and their scope.
    // Answered
    // Constants are block-scoped
Q2. What is maps and weakmaps
    // Refer here https://www.geeksforgeeks.org/map-vs-object-in-javascript/
    // https://github.com/sandeep0291/JavascriptPrepration/blob/master/mapSets.js
Q3. What is Event Propagation and difference between stopPropogation and ImmediateStopPropogation.
   // stopPropagation will prevent any parent handlers from being executed stopImmediatePropagation will prevent any
   //  parent handlers and also any other handlers from executing
    $("p").click(function(event) {
      event.stopImmediatePropagation();
    });

    $("p").click(function(event) {
      // This function won't be executed
      $(this).css("background-color", "#f00");
    });
    // Note: mentioning is that event handlers are executed in the order in which they have been attached to the element.
    // https://stackoverflow.com/questions/5299740/stoppropagation-vs-stopimmediatepropagation

Q4. What is a Service Worker
Q5. What is a Closure.
    // Answered
Q6. How to hide an object property
    // // Partial Answered
Q7. What is the difference between application cache and browser cache.
    // HTML5 provides application cache, which means that a web application is cached, 
    // and accessible without an internet connection. Application cache gives an application three advantages:
    //   Offline browsing - users can use the application when they're offline
    //   Speed - cached resources load faster Reduced server load - the
    //   browser will only download updated/changed resources from the server Browser cache

    //   Internet browsers use caching to store HTML web pages by storing a copy of visited pages and then using that copy to render when you re-visit that page. 
    // . If the date on the page is the same date as the previously stored copy, then the computer uses the one on your hard drive rather than re-downloading it from the internet.
    //   Internet browsers use caching to store HTML web pages by storing a copy of visited pages and then using that copy to render when you re-visit that page. 
    //    If the date on the page is the same date as the previously stored copy, then the computer uses the one on your hard drive rather than re-downloading it from the internet.
    //
    // Refere here: https://stackoverflow.com/questions/22958006/browser-cache-vs-html5-application-cache
Q8. How to achieve deep copy and what if an object have functions in it.
    // Partial Answered
    // For normal nested object without function,regex extra JSON.stringify
    // else we need to use library like loadash or maybe jquery
Q9. What is the difference b/w for in for of loop
    // for in loops over enumerable property names of an object.
    // for of (new in ES6) does use an object-specific iterator and loops over the values generated by that.
    // https://stackoverflow.com/questions/29285897/what-is-the-difference-between-for-in-and-for-of-statements-in-jav/29286412
Q10. What are generators


CSS Question

Q1. What is FlexBox and difference b/w justify-content and justify-item properties.
Q2. What are pseudo classes
Q3. What is difference b/w div and a section



// ***************************************************************************************//
                                    XORIANT
// ***************************************************************************************//

 React Question & JavaScript
 1. What is difference between state and props.
 2. How do you come to wether setState is async or not?
 3. Which lifecylce method will be called first and method calling sequence.
 4. What is memonization in react.
 5. What is Pure Component and where exactly it is required.
 6. Where do you fetch api in class component method.
 7. What is stopPropogation.
 8. What is preventDefault.
 9. What is Router and it's Syntax.
 10. How to submit a form.
 11. What is switch.
 12. What is Hooks.
 13. What bootstrap, do we won't need any media queries in bootstrap, does that solves all the problems.
 14. How can we make things more responsive.
 15. What is getDerivedStateFromProps()
 
 
 var x = {
    a: { 
        b: { c: 10, d: [1,2,3,4], e: 'Hello' }
       },
    f: [ 'World', { g: 10, [10,2,4] } ]
}

16. Write a function which fill return all primitive values.

Ans: 
var a = { b: 1, c: { d: 10, e: { f: [2,3,4] } } };

function filterThrough(obj){
	for( var i in obj ){
		if( typeof(obj[i]) == 'number' ){ 
           console.log('Property: '+ obj[i]);
		}
        else filterThrough(obj[i]);
    }
}

filterThrough(a);


// ***************************************************************************************//
                                    SAPIENT
// ***************************************************************************************//
 
JavaScript:

Q1. What are different ways to create an object;
Q2. What is the difference b/w  new Object(), Object.create(), Object.assign()
Q3. What are closures and what is the simplest example of closures.
Q4. How does closures actually works behind the scene
Q5. What you have used for async
Q6. Explain map,filter,reduce,some,every method of es6.
Q7. What are generators.
Q8. Difference b/w call by value and call by reference.
Q9. Whate are Promises.
Q10. Write a polyfill for filter method of es6.
Q11. What is the differenc b/w forEach and map method.
Q12. Does filter/map loops over only array? or loop over only object or both?


HTML,CSS,DOM:

Q1. What are semantic tags.
Q2. What is a css box model.
Q3. How would you calculate height of css box model.
Q4. Property name that sets padding and border to 0.
Q5.  <div class="parent" id="parent" onclick="clicked(event)" >
	<p id="1" >First </p>
	<p id="2"> Second</p>
	<p id="3"> Third</p>
     </div>
   
    Alert id of child and parent whenever clicked on a particular p tag element
    
    Answer:
    function clicked(e){
    	var id = e.target.id;
	var parentId = e.target.parentElement.id;
	alert("Id" + id + "parentId" + parentId );
    }







                                    
                                    
                                    
                                    
